// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Recipe Card can be rendered using different props including a really long recipe title matches its previous image 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "borderColor": "#104e01",
      "borderRadius": 5,
      "borderStyle": "solid",
      "borderWidth": 1,
      "marginBottom": 2.668,
      "marginTop": 2.668,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "borderBottomColor": "#104e01",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "marginLeft": "1.6%",
        "marginRight": "2%",
        "paddingBottom": "1%",
        "paddingTop": "1%",
        "width": "96.4%",
      }
    }
  >
    <Text
      maxFontSizeMultiplier={2}
      style={
        Object {
          "color": "#505050",
          "fontSize": 29.06613627191921,
          "fontStyle": "italic",
        }
      }
    >
      Re-shared by: 
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 29.06613627191921,
            "fontStyle": "italic",
          }
        }
      >
        pothers
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": "1%",
        "marginTop": "1%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": "2%",
            "marginRight": "2%",
            "opacity": 1,
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "fontSize": 32.12572956370018,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
        >
          This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginLeft": "2%",
            "marginRight": "2%",
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "fontSize": 29.06613627191921,
              "fontStyle": "italic",
            }
          }
        >
          Created by: 
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            maxFontSizeMultiplier={2}
            style={
              Object {
                "color": "#505050",
                "fontSize": 29.06613627191921,
                "fontStyle": "italic",
              }
            }
          >
            pothers
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": "2%",
            "marginRight": "2%",
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "flex": 1,
              "fontSize": 29.06613627191921,
            }
          }
        >
          Prep time: 
          01:00
        </Text>
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "flex": 1,
              "fontSize": 29.06613627191921,
            }
          }
        >
          Difficulty: 
          4
          /10
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 2,
          "justifyContent": "center",
          "opacity": 1,
          "overflow": "hidden",
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "borderRadius": 5,
            "height": 120.06,
            "marginRight": "4%",
            "width": 120.06,
          }
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 500.25,
        "opacity": 1,
        "width": "100%",
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "borderRadius": 5,
          "height": "100%",
          "position": "absolute",
          "width": "100%",
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": "1%",
        "marginTop": "1%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        2
      </Text>
    </View>
  </View>
</View>
`;

exports[`Recipe Card can be rendered using typical props and matches its previous image 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "borderColor": "#104e01",
      "borderRadius": 5,
      "borderStyle": "solid",
      "borderWidth": 1,
      "marginBottom": 2.668,
      "marginTop": 2.668,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "borderBottomColor": "#104e01",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "marginLeft": "1.6%",
        "marginRight": "2%",
        "paddingBottom": "1%",
        "paddingTop": "1%",
        "width": "96.4%",
      }
    }
  >
    <Text
      maxFontSizeMultiplier={2}
      style={
        Object {
          "color": "#505050",
          "fontSize": 29.06613627191921,
          "fontStyle": "italic",
        }
      }
    >
      Re-shared by: 
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 29.06613627191921,
            "fontStyle": "italic",
          }
        }
      >
        pothers
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": "1%",
        "marginTop": "1%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": "2%",
            "marginRight": "2%",
            "opacity": 1,
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "fontSize": 32.12572956370018,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
        >
          Test recipe
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginLeft": "2%",
            "marginRight": "2%",
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "fontSize": 29.06613627191921,
              "fontStyle": "italic",
            }
          }
        >
          Created by: 
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            maxFontSizeMultiplier={2}
            style={
              Object {
                "color": "#505050",
                "fontSize": 29.06613627191921,
                "fontStyle": "italic",
              }
            }
          >
            pothers
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": "2%",
            "marginRight": "2%",
            "width": "96%",
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "flex": 1,
              "fontSize": 29.06613627191921,
            }
          }
        >
          Prep time: 
          01:00
        </Text>
        <Text
          maxFontSizeMultiplier={2}
          style={
            Object {
              "color": "#505050",
              "flex": 1,
              "fontSize": 29.06613627191921,
            }
          }
        >
          Difficulty: 
          4
          /10
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 2,
          "justifyContent": "center",
          "opacity": 1,
          "overflow": "hidden",
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "borderRadius": 5,
            "height": 120.06,
            "marginRight": "4%",
            "width": 120.06,
          }
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 500.25,
        "opacity": 1,
        "width": "100%",
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "borderRadius": 5,
          "height": "100%",
          "position": "absolute",
          "width": "100%",
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": "1%",
        "marginTop": "1%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        1
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        maxFontSizeMultiplier={2}
        style={
          Object {
            "color": "#505050",
            "fontSize": 32.12572956370018,
            "fontWeight": "bold",
            "marginLeft": "5%",
            "textAlign": "center",
          }
        }
      >
        2
      </Text>
    </View>
  </View>
</View>
`;
