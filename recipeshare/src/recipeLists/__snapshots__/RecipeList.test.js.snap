// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Recipe List can be rendered with all recipes 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderWidth": 1,
        "height": 47,
        "justifyContent": "center",
        "left": "45%",
        "position": "absolute",
        "top": "10%",
        "width": 47,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#104e01"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "left": 1.3,
          "top": 1.7,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginBottom": 3.335,
            "marginLeft": 0,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "yellow",
              "borderWidth": 0,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 6.67,
                "overflow": "hidden",
                "width": 750,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              keyboardType="default"
              maxFontSizeMultiplier={2}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Search for Recipes"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "minHeight": 80.03999999999999,
                  "paddingLeft": 15,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      disableVirtualization={false}
      extraData={Object {}}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      listKey={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      maxToRenderPerBatch={10}
      nestedScrollEnabled={true}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={16}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 93.38000000000001,
                "opacity": 1,
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    Test recipe
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 5,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 106.72,
        "justifyContent": "center",
        "left": "80%",
        "opacity": 1,
        "position": "absolute",
        "top": "86%",
        "width": 106.72,
        "zIndex": 1,
      }
    }
    testID="filterButton"
  >
    <Text />
  </View>
</RCTSafeAreaView>
`;

exports[`Recipe List can be rendered with chef recipes 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderWidth": 1,
        "height": 47,
        "justifyContent": "center",
        "left": "45%",
        "position": "absolute",
        "top": "10%",
        "width": 47,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#104e01"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "left": 1.3,
          "top": 1.7,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginBottom": 3.335,
            "marginLeft": 0,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "yellow",
              "borderWidth": 0,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 6.67,
                "overflow": "hidden",
                "width": 750,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              keyboardType="default"
              maxFontSizeMultiplier={2}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Search for Recipes"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "minHeight": 80.03999999999999,
                  "paddingLeft": 15,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      disableVirtualization={false}
      extraData={Object {}}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      listKey={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      maxToRenderPerBatch={10}
      nestedScrollEnabled={true}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={16}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 93.38000000000001,
                "opacity": 1,
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    Test recipe
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 5,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 106.72,
        "justifyContent": "center",
        "left": "80%",
        "opacity": 1,
        "position": "absolute",
        "top": "86%",
        "width": 106.72,
        "zIndex": 1,
      }
    }
    testID="filterButton"
  >
    <Text />
  </View>
</RCTSafeAreaView>
`;

exports[`Recipe List can be rendered with the chef_liked feed 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderWidth": 1,
        "height": 47,
        "justifyContent": "center",
        "left": "45%",
        "position": "absolute",
        "top": "10%",
        "width": 47,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#104e01"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "left": 1.3,
          "top": 1.7,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginBottom": 3.335,
            "marginLeft": 0,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "yellow",
              "borderWidth": 0,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 6.67,
                "overflow": "hidden",
                "width": 750,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              keyboardType="default"
              maxFontSizeMultiplier={2}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Search for Recipes"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "minHeight": 80.03999999999999,
                  "paddingLeft": 15,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      disableVirtualization={false}
      extraData={Object {}}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      listKey={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      maxToRenderPerBatch={10}
      nestedScrollEnabled={true}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={16}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 93.38000000000001,
                "opacity": 1,
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    Test recipe
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 5,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 106.72,
        "justifyContent": "center",
        "left": "80%",
        "opacity": 1,
        "position": "absolute",
        "top": "86%",
        "width": 106.72,
        "zIndex": 1,
      }
    }
    testID="filterButton"
  >
    <Text />
  </View>
</RCTSafeAreaView>
`;

exports[`Recipe List can be rendered with the chefs feed 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderWidth": 1,
        "height": 47,
        "justifyContent": "center",
        "left": "45%",
        "position": "absolute",
        "top": "10%",
        "width": 47,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#104e01"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "left": 1.3,
          "top": 1.7,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginBottom": 3.335,
            "marginLeft": 0,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "yellow",
              "borderWidth": 0,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 6.67,
                "overflow": "hidden",
                "width": 750,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              keyboardType="default"
              maxFontSizeMultiplier={2}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Search for Recipes"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "minHeight": 80.03999999999999,
                  "paddingLeft": 15,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      disableVirtualization={false}
      extraData={Object {}}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      listKey={
        Array [
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 306,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "Test recipe",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "default",
            "time": "01:00",
            "username": "pothers",
          },
          Object {
            "chef_commented": 2,
            "chef_liked": 1,
            "chef_made": 0,
            "chef_shared": 0,
            "chefimage_url": "",
            "comments_count": 2,
            "difficulty": 4,
            "id": 307,
            "image_url": null,
            "likes_count": 1,
            "makes_count": 0,
            "name": "This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.",
            "renderOfflineMessage": Array [],
            "shared_id": 306,
            "sharer_id": 97,
            "sharer_username": "pothers",
            "shares_count": 1,
            "testTitle": "longStrings",
            "time": "01:00",
            "username": "pothers",
          },
        ]
      }
      maxToRenderPerBatch={10}
      nestedScrollEnabled={true}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={16}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 93.38000000000001,
                "opacity": 1,
              }
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    Test recipe
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderColor": "#104e01",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginBottom": 2.668,
                "marginTop": 2.668,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#104e01",
                  "borderBottomWidth": 0.5,
                  "flexDirection": "row",
                  "marginLeft": "1.6%",
                  "marginRight": "2%",
                  "paddingBottom": 6.67,
                  "paddingTop": 6.67,
                  "width": "96.4%",
                }
              }
            >
              <Text />
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Object {
                    "color": "#505050",
                    "fontSize": 29.06613627191921,
                    "fontStyle": "italic",
                  }
                }
              >
                Re-shared by: 
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 29.06613627191921,
                      "fontStyle": "italic",
                    }
                  }
                >
                  pothers
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 8,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "opacity": 1,
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 32.12572956370018,
                        "fontWeight": "bold",
                        "textAlign": "left",
                      }
                    }
                  >
                    This is my test recipe with a really long title and I want to know that it renders properly when the title string is really long.
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "flexWrap": "wrap",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "fontSize": 29.06613627191921,
                        "fontStyle": "italic",
                      }
                    }
                  >
                    Created by: 
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      maxFontSizeMultiplier={2}
                      style={
                        Object {
                          "color": "#505050",
                          "fontSize": 29.06613627191921,
                          "fontStyle": "italic",
                        }
                      }
                    >
                      pothers
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginLeft": "2%",
                      "marginRight": "2%",
                      "width": "96%",
                    }
                  }
                >
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Prep time: 
                    01:00
                  </Text>
                  <Text
                    maxFontSizeMultiplier={2}
                    style={
                      Object {
                        "color": "#505050",
                        "flex": 1,
                        "fontSize": 29.06613627191921,
                      }
                    }
                  >
                    Difficulty: 
                    4
                    /10
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 5,
                      "height": 120.06,
                      "marginRight": "4%",
                      "width": 120.06,
                    }
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": 500.25,
                  "opacity": 1,
                  "width": 750,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "borderRadius": 5,
                    "height": "100%",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginBottom": "1%",
                  "marginTop": "1%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  1
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Object {
                      "color": "#505050",
                      "fontSize": 32.12572956370018,
                      "fontWeight": "bold",
                      "marginLeft": "5%",
                      "textAlign": "center",
                    }
                  }
                >
                  2
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 5,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 106.72,
        "justifyContent": "center",
        "left": "80%",
        "opacity": 1,
        "position": "absolute",
        "top": "86%",
        "width": 106.72,
        "zIndex": 1,
      }
    }
    testID="filterButton"
  >
    <Text />
  </View>
</RCTSafeAreaView>
`;
