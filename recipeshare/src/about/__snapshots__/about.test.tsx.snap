// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`About Page renders displaying licenses 1`] = `
<RCTSafeAreaView
  style={
    {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      {
        "borderColor": "red",
        "borderWidth": 0,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "white",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "overflow": "hidden",
              "width": "100%",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          App Version:
        </Text>
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          undefined.22
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="information"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View terms and conditions
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="information-outline"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View privacy policy
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#104e01",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "space-evenly",
              "maxWidth": "50%",
              "minHeight": 80.03999999999999,
              "minWidth": 285,
            },
            {
              "height": 80.03999999999999,
              "justifyContent": "flex-start",
              "maxWidth": "100%",
              "paddingLeft": 15,
              "width": "100%",
            },
          ]
        }
      >
        <Icon
          name="cellphone-information"
          size={53.36}
          style={
            {
              "color": "#fff59b",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#fff59b",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View licenses
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "flex": 1,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "purple",
            "borderRadius": 11.25,
            "borderWidth": 0,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-between",
            "marginTop": 6.67,
            "minHeight": 80.03999999999999,
            "overflow": "hidden",
            "width": "100%",
          },
          {
            "flex": 1,
          },
        ]
      }
    >
      <RCTScrollView
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "column",
          }
        }
      >
        <View>
          <View
            style={
              {
                "height": "100%",
                "padding": 15,
                "width": "100%",
              }
            }
          >
            <Text>
              Recipe-Share for 
              ios
            </Text>
            <Text>
              Copyright © 
              2023
               Recipe-Share LLC. All rights reserved.
            </Text>
            <Text>
              Recipe-Share for 
              ios
               is built using these open-source packages and their licenses:
            </Text>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-native-async-storage/async-storage
                ; 
              </Text>
              <Text>
                Copyright (c) , Facebook, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-native-community/masked-view
                ; 
              </Text>
              <Text>
                Copyright (c) , Facebook, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-native-community/netinfo
                ; 
              </Text>
              <Text>
                Copyright (c) , Facebook, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-navigation/core
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Navigation Contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-navigation/drawer
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Navigation Contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-navigation/material-top-tabs
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Navigation Contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-navigation/native
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Navigation Contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @react-navigation/stack
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Navigation Contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                chalk
                ; 
              </Text>
              <Text>
                Copyright (c) Sindre Sorhus &lt;sindresorhus@gmail.com&gt; (https://sindresorhus.com)
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                expo
                ; 
              </Text>
              <Text>
                Copyright (c)  650 Industries, Inc. (aka Expo)
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                expo-image-editor
                ; 
              </Text>
              <Text>
                Copyright (c)  Thomas Coldwell
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                gradle
                ; 
              </Text>
              <Text>
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                indent-string
                ; 
              </Text>
              <Text>
                Copyright (c) Sindre Sorhus &lt;sindresorhus@gmail.com&gt; (https://sindresorhus.com)
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                moment
                ; 
              </Text>
              <Text>
                Copyright (c) JS Foundation and other contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                node-fetch
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 - 2020 Node Fetch Team
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                node-forge
                ; 
              </Text>
              <Text>
                Copyright (c) 2010, Digital Bazaar, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react
                ; 
              </Text>
              <Text>
                Copyright (c) Facebook, Inc. and its affiliates.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native
                ; 
              </Text>
              <Text>
                Copyright (c) Facebook, Inc. and its affiliates.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-autocomplete-input
                ; 
              </Text>
              <Text>
                Copyright (c) 2015 Laurence
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-drag-sort
                ; 
              </Text>
              <Text>
                Copyright 2021 github.com/mochixuan
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-elements
                ; 
              </Text>
              <Text>
                Copyright (c) 2021 Nader Dabit
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-gesture-handler
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Krzysztof Magiera
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-reanimated
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Krzysztof Magiera
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-responsive-dimensions
                ; 
              </Text>
              <Text>
                Copyright (c) 2017-present DaniAkash
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-safe-area-context
                ; 
              </Text>
              <Text>
                Copyright (c) 2019 Th3rd Wave
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-screens
                ; 
              </Text>
              <Text>
                Copyright (c) 2018 Krzysztof Magiera
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-tab-view
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 React Native Community
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-vector-icons
                ; 
              </Text>
              <Text>
                Copyright (c) 2015 Joel Arvidsson
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-webview
                ; 
              </Text>
              <Text>
                Copyright (c) 2015-present, Facebook, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-webview-autoheight
                ; 
              </Text>
              <Text>
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-redux
                ; 
              </Text>
              <Text>
                Copyright (c) 2015-present Dan Abramov
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-scripts
                ; 
              </Text>
              <Text>
                Copyright (c) 2013-present, Facebook, Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                redux
                ; 
              </Text>
              <Text>
                Copyright (c) 2015-present Dan Abramov
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                redux-thunk
                ; 
              </Text>
              <Text>
                Copyright (c) 2015-present Dan Abramov
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                serialize-javascript
                ; 
              </Text>
              <Text>
                Copyright 2014 Yahoo! Inc.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                sync-exec
                ; 
              </Text>
              <Text>
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                ws
                ; 
              </Text>
              <Text>
                Copyright (c) 2011 Einar Otto Stangvik &lt;einaros@gmail.com&gt;
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                @babel/preset-env
                ; 
              </Text>
              <Text>
                Copyright (c) 2014-present Sebastian McKenzie and other contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                babel-eslint
                ; 
              </Text>
              <Text>
                Copyright (c) 2014-2016 Sebastian McKenzie &lt;sebmck@gmail.com&gt;
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                babel-preset-expo
                ; 
              </Text>
              <Text>
                Copyright (c) 2015-present 650 Industries, Inc. (aka Expo)
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                enzyme
                ; 
              </Text>
              <Text>
                Copyright (c) 2015 Airbnb, Inc. and contributors
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                enzyme-to-json
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Adrien Antoine adriantoine@gmail.com
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                eslint
                ; 
              </Text>
              <Text>
                Copyright JS Foundation and other contributors, https://js.foundation
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                eslint-plugin-react
                ; 
              </Text>
              <Text>
                Copyright (c) 2014 Yannick Croissant
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                eslint-plugin-react-native
                ; 
              </Text>
              <Text>
                Copyright (c) 2015 Tom Hastjarjanto
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                eslint-watch
                ; 
              </Text>
              <Text>
                Copyright (c) 2015 Colten Rouska
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                jest
                ; 
              </Text>
              <Text>
                Copyright (c) Facebook, Inc. and its affiliates.
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                jest-environment-enzyme
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Blaine Kasten
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                jest-enzyme
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Blaine Kasten
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                react-native-mock-render
                ; 
              </Text>
              <Text>
                Copyright (c) 2016 Jake Howard
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginHorizontal": 15,
                  "marginVertical": 7.5,
                }
              }
            >
              <Text>
                • 
                redux-mock-store
                ; 
              </Text>
              <Text>
                Copyright (c) 2017 Arnaud Benard
                ; 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                    }
                  }
                >
                  license
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`About Page renders displaying privacy policy 1`] = `
<RCTSafeAreaView
  style={
    {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      {
        "borderColor": "red",
        "borderWidth": 0,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "white",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "overflow": "hidden",
              "width": "100%",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          App Version:
        </Text>
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          undefined.22
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="information"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View terms and conditions
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#104e01",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "space-evenly",
              "maxWidth": "50%",
              "minHeight": 80.03999999999999,
              "minWidth": 285,
            },
            {
              "height": 80.03999999999999,
              "justifyContent": "flex-start",
              "maxWidth": "100%",
              "paddingLeft": 15,
              "width": "100%",
            },
          ]
        }
      >
        <Icon
          name="information-outline"
          size={53.36}
          style={
            {
              "color": "#fff59b",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#fff59b",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View privacy policy
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="cellphone-information"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View licenses
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "flex": 1,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "purple",
            "borderRadius": 11.25,
            "borderWidth": 0,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-between",
            "marginTop": 6.67,
            "minHeight": 80.03999999999999,
            "overflow": "hidden",
            "width": "100%",
          },
          {
            "flex": 1,
          },
        ]
      }
    >
      <RCTScrollView
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "column",
          }
        }
      >
        <View>
          <View>
            <Text
              maxFontSizeMultiplier={2}
              style={
                {
                  "fontSize": 33.65552620959067,
                  "padding": 15,
                }
              }
            >
              Effective date: December 23, 2019

Recipe-Share LLC ("us", "we", or "our") operates the Recipe-Share mobile application (hereinafter referred to as the "Service").

This page informs you of our policies regarding the collection, use and disclosure of personal data when you use our Service and the choices you have associated with that data.

We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, the terms used in this Privacy Policy have the same meanings as in our Terms and Conditions.

Definitions  
-----------

* Service

Service is the Recipe-Share mobile application operated by Recipe-Share LLC

* Personal Data

Personal Data means data about a living individual who can be identified from those data (or from those and other information either in our possession or likely to come into our possession).

* Usage Data

Usage Data is data collected automatically either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).

* Cookies

Cookies are small files stored on your device (computer or mobile device).

* Data Controller

Data Controller means the natural or legal person who (either alone or jointly or in common with other persons) determines the purposes for which and the manner in which any personal information are, or are to be, processed.

For the purpose of this Privacy Policy, we are a Data Controller of your Personal Data.

* Data Processors (or Service Providers)

Data Processor (or Service Provider) means any natural or legal person who processes the data on behalf of the Data Controller.

We may use the services of various Service Providers in order to process your data more effectively.

* Data Subject (or User)

Data Subject is any living individual who is using our Service and is the subject of Personal Data.

Information Collection and Use  
------------------------------

We collect several different types of information for various purposes to provide and improve our Service to you.

Types of Data Collected  
~~~~~~~~~~~~~~~~~~~~~~~

Personal Data  
*************

While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you ("Personal Data"). Personally identifiable information may include, but is not limited to:

* Email address
* First name and last name
* Address, State, Province, ZIP/Postal code, City
* Cookies and Usage Data

We may use your Personal Data to contact you with newsletters, marketing or promotional materials and other information that may be of interest to you. You may opt out of receiving any, or all, of these communications from us by following the unsubscribe link or instructions provided in any email we send or by contacting us.

Usage Data  
**********

When you access the Service with a mobile device, we may collect certain information automatically, including, but not limited to, the type of mobile device you use, your mobile device unique ID, the IP address of your mobile device, your mobile operating system, the type of mobile Internet browser you use, unique device identifiers and other diagnostic data ("Usage Data").

Location Data  
*************

We may use and store information about your location if you give us permission to do so ("Location Data"). We use this data to provide features of our Service, to improve and customise our Service.

You can enable or disable location services when you use our Service at any time by way of your device settings.

Tracking &amp; Cookies Data  
************

We use cookies and similar tracking technologies to track the activity on our Service and we hold certain information.

Cookies are files with a small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Other tracking technologies are also used such as beacons, tags and scripts to collect and track information and to improve and analyse our Service.

You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.

Examples of Cookies we use:

* Session Cookies. We use Session Cookies to operate our Service.
* Preference Cookies. We use Preference Cookies to remember your preferences
and various settings.
* Security Cookies. We use Security Cookies for security purposes.
* Advertising Cookies. Advertising Cookies are used to serve you with
advertisements that may be relevant to you and your interests.

Use of Data  
-----------

Recipe-Share LLC uses the collected data for various purposes:

* To provide and maintain our Service
* To notify you about changes to our Service
* To allow you to participate in interactive features of our Service when
you choose to do so
* To provide customer support
* To gather analysis or valuable information so that we can improve our
Service
* To monitor the usage of our Service
* To detect, prevent and address technical issues
* To provide you with news, special offers and general information about
other goods, services and events which we offer that are similar to those
that you have already purchased or enquired about unless you have opted
not to receive such information

Legal Basis for Processing Personal Data under the General Data Protection Regulation (GDPR)  
--------------------------------------------------------------------------------------------

If you are from the European Economic Area (EEA), Recipe-Share LLC legal basis for collecting and using the personal information described in this Privacy Policy depends on the Personal Data we collect and the specific context in which we collect it.

Recipe-Share LLC may process your Personal Data because:

* We need to perform a contract with you
* You have given us permission to do so
* The processing is in our legitimate interests and it is not overridden by your rights
* For payment processing purposes
* To comply with the law

Retention of Data  
-----------------

Recipe-Share LLC will retain your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes and enforce our legal agreements and policies.

Recipe-Share LLC will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of our Service, or we are legally obligated to retain this data for longer periods.

Transfer of Data  
----------------

Your information, including Personal Data, may be transferred to - and maintained on - computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ from those of your jurisdiction.

If you are located outside United States and choose to provide information to us, please note that we transfer the data, including Personal Data, to United States and process it there.

Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.

Recipe-Share LLC will take all the steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organisation or a country unless there are adequate controls in place including the security of your data and other personal information.

Disclosure of Data  
------------------

Disclosure for Law Enforcement  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Under certain circumstances, Recipe-Share LLC may be required to disclose your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).

Legal Requirements  
~~~~~~~~~~~~~~~~~~

Recipe-Share LLC may disclose your Personal Data in the good faith belief that such action is necessary to:

* To comply with a legal obligation
* To protect and defend the rights or property of Recipe-Share LLC
* To prevent or investigate possible wrongdoing in connection with the
Service
* To protect the personal safety of users of the Service or the public
* To protect against legal liability

Security of Data  
----------------

The security of your data is important to us but remember that no method of transmission over the Internet or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.

Our Policy on "Do Not Track" Signals under the California Online Protection Act (CalOPPA)  
-----------------------------------------------------------------------------------------

We do not support Do Not Track ("DNT"). Do Not Track is a preference you can set in your web browser to inform websites that you do not want to be tracked.

You can enable or disable Do Not Track by visiting the Preferences or Settings page of your web browser.

Your Data Protection Rights under the General Data Protection Regulation (GDPR)  
-------------------------------------------------------------------------------

If you are a resident of the European Economic Area (EEA), you have certain data protection rights. Recipe-Share LLC aims to take reasonable steps to allow you to correct, amend, delete or limit the use of your Personal Data.

If you wish to be informed about what Personal Data we hold about you and if you want it to be removed from our systems, please contact us.

In certain circumstances, you have the following data protection rights:

* The right to access, update or delete the information we have on you. Whenever made possible, you can access, update or request deletion of your Personal Data directly within your account settings section. If you are unable to perform these actions yourself, please contact us to assist you.

* The right of rectification. You have the right to have your information rectified if that information is inaccurate or incomplete.

* The right to object. You have the right to object to our processing of your Personal Data.

* The right of restriction. You have the right to request that we restrict the processing of your personal information.

* The right to data portability. You have the right to be provided with a copy of the information we have on you in a structured, machine-readable and commonly used format.

* The right to withdraw consent. You also have the right to withdraw your consent at any time where Recipe-Share LLC relied on your consent to process your personal information.


Please note that we may ask you to verify your identity before responding to such requests.

You have the right to complain to a Data Protection Authority about our collection and use of your Personal Data. For more information, please contact your local data protection authority in the European Economic Area (EEA).

Service Providers  
-----------------

We may employ third party companies and individuals to facilitate our Service ("Service Providers"), provide the Service on our behalf, perform Service- related services or assist us in analysing how our Service is used.

These third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.

Advertising  
~~~~~~~~~~~

We may use third-party Service Providers to show advertisements to you to help support and maintain our Service.

* AdMob by Google

AdMob by Google is provided by Google Inc.

You can opt-out from the AdMob by Google service by following the instructions described by Google:
&lt;https://support.google.com/ads/answer/2662922?hl=en&gt;

For more information on how Google uses the collected information, please visit the "How Google uses data when you use our partners' sites or app" page: &lt;https://policies.google.com/technologies/partner-sites&gt; or visit the Privacy Policy of Google: &lt;https://policies.google.com/privacy&gt;

Payments  
~~~~~~~~

We may provide paid products and/or services within the Service. In that case, we use third-party services for payment processing (e.g. payment processors).

We will not store or collect your payment card details. That information is provided directly to our third-party payment processors whose use of your personal information is governed by their Privacy Policy. These payment processors adhere to the standards set by PCI-DSS as managed by the PCI Security Standards Council, which is a joint effort of brands like Visa, MasterCard, American Express and Discover. PCI-DSS requirements help ensure the secure handling of payment information.

The payment processors we work with are:

* Stripe

Their Privacy Policy can be viewed at &lt;https://stripe.com/us/privacy&gt;

Links to Other Sites  
--------------------

Our Service may contain links to other sites that are not operated by us. If you click a third party link, you will be directed to that third party's site. We strongly advise you to review the Privacy Policy of every site you visit.

We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.

Children's Privacy  
------------------

Our Service does not address anyone under the age of 18 ("Children").

We do not knowingly collect personally identifiable information from anyone under the age of 18. If you are a parent or guardian and you are aware that your Child has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.

Changes to This Privacy Policy  
------------------------------

We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.

We will let you know via email and/or a prominent notice on our Service, prior to the change becoming effective and update the "effective date" at the top of this Privacy Policy.

You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.

Contact Us  
----------

If you have any questions about this Privacy Policy, please contact us:
            </Text>
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginLeft": 15,
                }
              }
            >
              <Text
                style={
                  {
                    "fontSize": 33.65552620959067,
                  }
                }
              >
                * By email: 
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "blue",
                      "fontSize": 33.65552620959067,
                      "marginBottom": 30,
                    }
                  }
                >
                  admin@recipe-share.com
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`About Page renders displaying t & c by default 1`] = `
<RCTSafeAreaView
  style={
    {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="cover"
    source={1}
    style={
      {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      {
        "borderColor": "red",
        "borderWidth": 0,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "white",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "overflow": "hidden",
              "width": "100%",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          App Version:
        </Text>
        <Text
          maxFontSizeMultiplier={2}
          style={
            {
              "fontSize": 33.65552620959067,
              "padding": 15,
            }
          }
        >
          undefined.22
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#104e01",
              "borderColor": "#104e01",
              "borderRadius": 11.25,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "space-evenly",
              "maxWidth": "50%",
              "minHeight": 80.03999999999999,
              "minWidth": 285,
            },
            {
              "height": 80.03999999999999,
              "justifyContent": "flex-start",
              "maxWidth": "100%",
              "paddingLeft": 15,
              "width": "100%",
            },
          ]
        }
      >
        <Icon
          name="information"
          size={53.36}
          style={
            {
              "color": "#fff59b",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#fff59b",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View terms and conditions
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="information-outline"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View privacy policy
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "purple",
          "borderRadius": 11.25,
          "borderWidth": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "minHeight": 80.03999999999999,
          "overflow": "hidden",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff59b",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 80.03999999999999,
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "minHeight": 80.03999999999999,
            "minWidth": 285,
            "opacity": 1,
            "paddingLeft": 15,
            "width": "100%",
          }
        }
      >
        <Icon
          name="cellphone-information"
          size={53.36}
          style={
            {
              "color": "#104e01",
            }
          }
        />
        <Text
          maxFontSizeMultiplier={2}
          style={
            [
              {
                "color": "#104e01",
                "fontSize": 27.53633962602873,
                "fontWeight": "bold",
                "paddingHorizontal": 7.5,
                "textAlign": "center",
              },
              {
                "fontSize": 33.65552620959067,
              },
            ]
          }
        >
          View licenses
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "borderColor": "red",
          "borderWidth": 0,
          "overflow": "hidden",
          "width": "100%",
        },
        {
          "flex": 1,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "purple",
            "borderRadius": 11.25,
            "borderWidth": 0,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-between",
            "marginTop": 6.67,
            "minHeight": 80.03999999999999,
            "overflow": "hidden",
            "width": "100%",
          },
          {
            "flex": 1,
          },
        ]
      }
    >
      <RCTScrollView
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#104e01",
            "borderRadius": 11.25,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "column",
          }
        }
      >
        <View>
          <View>
            <Text
              maxFontSizeMultiplier={2}
              style={
                {
                  "fontSize": 33.65552620959067,
                  "padding": 15,
                }
              }
            >
              Last updated: December 22, 2019

Please read these Terms and Conditions ("Terms", "Terms and Conditions") carefully before using the Recipe-Share mobile application (the "Service") operated by Recipe-Share LLC ("us", "we", or "our").

Your access to and use of the Service is conditioned upon your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who wish to access or use the Service.

By accessing or using the Service you agree to be bound by these Terms. If you disagree with any part of the terms then you do not have permission to access the Service.

Communications
--------------

By creating an Account on our service, you agree to subscribe to newsletters, marketing or promotional materials and other information we may send. However, you may opt out of receiving any, or all, of these communications from us by following the unsubscribe link or instructions provided in any email we send.

Content
-------

Our Service allows you to post, link, store, share and otherwise make available certain information, text, graphics, videos, or other material ("Content"). You are responsible for the Content that you post on or through the Service, including its legality, reliability, and appropriateness.

By posting Content on or through the Service, You represent and warrant that: (i) the Content is yours (you own it) and/or you have the right to use it and the right to grant us the rights and license as provided in these Terms, and (ii) that the posting of your Content on or through the Service does not violate the privacy rights, publicity rights, copyrights, contract rights or any other rights of any person or entity. We reserve the right to terminate the account of anyone found to be infringing on a copyright.

You retain any and all of your rights to any Content you submit, post or display on or through the Service and you are responsible for protecting those rights. We take no responsibility and assume no liability for Content you or any third party posts on or through the Service. However, by posting Content using the Service you grant us the right and license to use, modify, publicly perform, publicly display, reproduce, and distribute such Content on and through the Service. You agree that this license includes the right for us to make your Content available to other users of the Service, who may also use your Content subject to these Terms.

Recipe-Share LLC has the right but not the obligation to monitor and edit all Content provided by users.

In addition, Content found on or through this Service are the property of Recipe-Share LLC or used with permission. You may not distribute, modify, transmit, reuse, download, repost, copy, or use said Content, whether in whole or in part, for commercial purposes or for personal gain, without express advance written permission from us.

Accounts
--------

When you create an account with us, you guarantee that you are above the age of 18, and that the information you provide us is accurate, complete, and current at all times. Inaccurate, incomplete, or obsolete information may result in the immediate termination of your account on the Service.

You are responsible for maintaining the confidentiality of your account and password, including but not limited to the restriction of access to your computer and/or account. You agree to accept responsibility for any and all activities or actions that occur under your account and/or password, whether your password is with our Service or a third-party service. You must notify us immediately upon becoming aware of any breach of security or unauthorized use of your account.

You may not use as a username the name of another person or entity or that is not lawfully available for use, a name or trademark that is subject to any rights of another person or entity other than you, without appropriate authorization. You may not use as a username any name that is offensive, vulgar or obscene.

Copyright Policy
----------------

We respect the intellectual property rights of others. It is our policy to respond to any claim that Content posted on the Service infringes on the copyright or other intellectual property rights ("Infringement") of any person or entity.

If you are a copyright owner, or authorized on behalf of one, and you believe that the copyrighted work has been copied in a way that constitutes copyright infringement, please submit your claim via email to admin@recipe-share.com, with the subject line: "Copyright Infringement" and include in your claim a detailed description of the alleged Infringement as detailed below, under "DMCA Notice and Procedure for Copyright Infringement Claims"

You may be held accountable for damages (including costs and attorneys' fees) for misrepresentation or bad-faith claims on the infringement of any Content found on and/or through the Service on your copyright.

DMCA Notice and Procedure for Copyright Infringement Claims
--------------------------------------

You may submit a notification pursuant to the Digital Millennium Copyright Act (DMCA) by providing our Copyright Agent with the following information in writing (see 17 U.S.C 512(c)(3) for further detail):

  * an electronic or physical signature of the person authorized to act on     behalf of the owner of the copyright's interest;

  * a description of the copyrighted work that you claim has been infringed,     including the URL (i.e., web page address) of the location where the     copyrighted work exists or a copy of the copyrighted work;

  * identification of the URL or other specific location on the Service where     the material that you claim is infringing is located;

  * your address, telephone number, and email address;

  * a statement by you that you have a good faith belief that the disputed use     is not authorized by the copyright owner, its agent, or the law;

  * a statement by you, made under penalty of perjury, that the above     information in your notice is accurate and that you are the copyright     owner or authorized to act on the copyright owner's behalf.


You can contact our Copyright Agent via email at admin@recipe-share.com

Intellectual Property
---------------------

The Service and its original content (excluding Content provided by users), features and functionality are and will remain the exclusive property of Recipe-Share LLC and its licensors. The Service is protected by copyright, trademark, and other laws of both the United States and foreign countries. Our trademarks and trade dress may not be used in connection with any product or service without the prior written consent of Recipe-Share LLC.

Links To Other Web Sites
------------------------

Our Service may contain links to third party web sites or services that are not owned or controlled by Recipe-Share LLC.

Recipe-Share LLC has no control over, and assumes no responsibility for the content, privacy policies, or practices of any third party web sites or services. We do not warrant the offerings of any of these entities/individuals or their websites.

You acknowledge and agree that Recipe-Share LLC shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with use of or reliance on any such content, goods or services available on or through any such third party web sites or services.

We strongly advise you to read the terms and conditions and privacy policies of any third party web sites or services that you visit.

Termination
-----------

We may terminate or suspend your account and bar access to the Service immediately, without prior notice or liability, under our sole discretion, for any reason whatsoever and without limitation, including but not limited to a breach of the Terms.

If you wish to terminate your account, you may simply discontinue using the Service.

All provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.

Indemnification
---------------

You agree to defend, indemnify and hold harmless Recipe-Share LLC and its licensee and licensors, and their employees, contractors, agents, officers and directors, from and against any and all claims, damages, obligations, losses, liabilities, costs or debt, and expenses (including but not limited to attorney's fees), resulting from or arising out of a) your use and access of the Service, by you or any person using your account and password; b) a breach of these Terms, or c) Content posted on the Service.

Limitation Of Liability
-----------------------

In no event shall Recipe-Share LLC, nor its directors, employees, partners, agents, suppliers, or affiliates, be liable for any indirect, incidental, special, consequential or punitive damages, including without limitation, loss of profits, data, use, goodwill, or other intangible losses, resulting from (i) your access to or use of or inability to access or use the Service; (ii) any conduct or content of any third party on the Service; (iii) any content obtained from the Service; and (iv) unauthorized access, use or alteration of your transmissions or content, whether based on warranty, contract, tort (including negligence) or any other legal theory, whether or not we have been informed of the possibility of such damage, and even if a remedy set forth herein is found to have failed of its essential purpose.

Disclaimer
----------

Your use of the Service is at your sole risk. The Service is provided on an "AS IS" and "AS AVAILABLE" basis. The Service is provided without warranties of any kind, whether express or implied, including, but not limited to, implied warranties of merchantability, fitness for a particular purpose, non- infringement or course of performance.

Recipe-Share LLC its subsidiaries, affiliates, and its licensors do not warrant that a) the Service will function uninterrupted, secure or available at any particular time or location; b) any errors or defects will be corrected; c) the Service is free of viruses or other harmful components; or d) the results of using the Service will meet your requirements.

Exclusions
----------

Some jurisdictions do not allow the exclusion of certain warranties or the exclusion or limitation of liability for consequential or incidental damages, so the limitations above may not apply to you.

Governing Law
-------------

These Terms shall be governed and construed in accordance with the laws of Texas, United States, without regard to its conflict of law provisions.

Our failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and supersede and replace any prior agreements we might have had between us regarding the Service.

Changes
-------

We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a revision is material we will provide at least 30 days notice prior to any new terms taking effect. What constitutes a material change will be determined at our sole discretion.

By continuing to access or use our Service after any revisions become effective, you agree to be bound by the revised terms. If you do not agree to the new terms, you are no longer authorized to use the Service.

Contact Us
----------

If you have any questions about these Terms, please contact us at:
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "blue",
                    "fontSize": 33.65552620959067,
                    "marginBottom": 30,
                  }
                }
              >
                admin@recipe-share.com
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;
