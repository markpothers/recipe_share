// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Bar can be rendered (with the delete button) matches its previous image 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "justifyContent": "center",
      "marginBottom": 6.67,
      "marginLeft": 0,
    }
  }
>
  <View
    style={
      {
        "borderColor": "red",
        "borderWidth": 0,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": "#104e01",
          "borderRadius": 11.25,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "overflow": "hidden",
          "width": 750,
        }
      }
    >
      <TextInput
        autoCapitalize="none"
        keyboardType="default"
        maxFontSizeMultiplier={2}
        onBlur={[MockFunction]}
        onChangeText={[Function]}
        placeholder="SearchBar placeholder text"
        style={
          {
            "backgroundColor": "white",
            "fontSize": 30.595932917809698,
            "minHeight": 80.03999999999999,
            "paddingLeft": 15,
            "textAlign": "left",
            "textAlignVertical": "center",
            "width": 675,
          }
        }
        testID="searchTermInput"
        value="spaghetti"
      />
      <View
        accessibilityLabel="clear search text"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "flex-end",
            "height": "100%",
            "justifyContent": "center",
            "opacity": 1,
            "width": 75,
          }
        }
        testID="deleteSearchTermButton"
      >
        <Icon
          name="close"
          size={46.690000000000005}
          style={
            {
              "color": "#505050",
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Search Bar can be rendered (without the delete button) matches its previous image 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "justifyContent": "center",
      "marginBottom": 6.67,
      "marginLeft": 0,
    }
  }
>
  <View
    style={
      {
        "borderColor": "red",
        "borderWidth": 0,
        "overflow": "hidden",
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": "#104e01",
          "borderRadius": 11.25,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginTop": 6.67,
          "overflow": "hidden",
          "width": 750,
        }
      }
    >
      <TextInput
        autoCapitalize="none"
        keyboardType="default"
        maxFontSizeMultiplier={2}
        onBlur={[MockFunction]}
        onChangeText={[Function]}
        placeholder="SearchBar placeholder text"
        style={
          {
            "backgroundColor": "white",
            "fontSize": 30.595932917809698,
            "minHeight": 80.03999999999999,
            "paddingLeft": 15,
            "textAlign": "left",
            "textAlignVertical": "center",
            "width": 675,
          }
        }
        testID="searchTermInput"
        value=""
      />
    </View>
  </View>
</View>
`;
