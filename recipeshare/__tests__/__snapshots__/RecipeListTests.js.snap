// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Recipe List can be rendered and matches its previous image 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "borderColor": "blue",
      "borderWidth": 0,
      "flex": 1,
    }
  }
>
  <Image
    source={1}
    style={
      Object {
        "borderColor": "black",
        "borderWidth": 0,
        "height": 1334,
        "position": "absolute",
        "width": 750,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderWidth": 1,
        "height": 47,
        "justifyContent": "center",
        "left": "45%",
        "position": "absolute",
        "top": "10%",
        "width": 47,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#104e01"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "left": 1.3,
          "top": 1.7,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff59b",
        "borderColor": "#104e01",
        "borderRadius": 100,
        "borderStyle": "solid",
        "borderWidth": 1,
        "height": 106.72,
        "justifyContent": "center",
        "left": "80%",
        "opacity": 1,
        "position": "absolute",
        "top": "86%",
        "width": 106.72,
        "zIndex": 1,
      }
    }
    testID="filterButton"
  >
    <Text />
  </View>
  <RCTScrollView
    disableVirtualization={false}
    extraData={Object {}}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    nestedScrollEnabled={true}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={1}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View />
  </RCTScrollView>
</RCTSafeAreaView>
`;
